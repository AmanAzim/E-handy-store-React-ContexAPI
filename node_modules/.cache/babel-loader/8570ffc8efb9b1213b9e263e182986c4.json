{"ast":null,"code":"import _objectSpread from \"D:\\\\ReactJs-Training\\\\e-commerce-project-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\ReactJs-Training\\\\e-commerce-project-react\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //The Context Provider is already set up here in advance so we can use this as central state management/props handeling system\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      //because the array is too big we kept in separate file and imported it.\n      detailProduct: _objectSpread({}, detailProduct),\n      cart: [],\n      modalOpen: false,\n      modalProduct: _objectSpread({}, detailProduct),\n      cartSubtotal: 0,\n      cartTax: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState({\n        products: tempProducts\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(product => {\n        return product.id === id;\n      });\n      return product;\n    };\n\n    this.handelDetail = id => {\n      this.setState({\n        detailProduct: this.getItem(id)\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      let index = tempProducts.findIndex(product => product.id === id);\n      let product = tempProducts[index];\n      console.log('product: ' + product);\n      product.inCart = true;\n      product.count = 1;\n      let price = product.price;\n      product.total = price;\n      this.setState({\n        products: tempProducts,\n        cart: [...this.state.cart, product]\n      }); //console.log('state: '+this.state);\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState({\n        modalProduct: product,\n        modalOpen: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        modalOpen: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return (//It is allowed to sent the whole state like this \"...this.state\"\n      React.createElement(ProductContext.Provider, {\n        value: _objectSpread({}, this.state, {\n          handelDetail: this.handelDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.children)\n    );\n  }\n\n}\n\nexport { ProductContext, ProductProvider };","map":{"version":3,"sources":["D:\\ReactJs-Training\\e-commerce-project-react\\src\\context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubtotal","cartTax","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handelDetail","addToCart","index","findIndex","console","log","inCart","count","price","total","openModal","closeModal","componentDidMount","render","props","children"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {storeProducts, detailProduct} from './data';\r\n\r\n\r\n\r\nconst ProductContext=React.createContext();\r\n\r\n//The Context Provider is already set up here in advance so we can use this as central state management/props handeling system\r\nclass ProductProvider extends Component {\r\n\r\n    state={\r\n        products:[], //because the array is too big we kept in separate file and imported it.\r\n        detailProduct:{...detailProduct},\r\n        cart:[],\r\n        modalOpen:false,\r\n        modalProduct:{...detailProduct},\r\n        cartSubtotal:0,\r\n        cartTax:0,\r\n        \r\n    };\r\n\r\n    setProducts=()=>{\r\n        let tempProducts=[];\r\n\r\n        storeProducts.forEach((item)=>{\r\n            const singleItem={...item};\r\n            tempProducts=[...tempProducts, singleItem];\r\n        });\r\n\r\n        this.setState({products:tempProducts});\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setProducts();\r\n    }\r\n\r\n    getItem=(id)=>{\r\n        const product=this.state.products.find((product)=>{\r\n            return product.id===id;\r\n        });\r\n\r\n        return product;\r\n    };\r\n    handelDetail=(id)=>{\r\n        this.setState({detailProduct:this.getItem(id)});\r\n    };\r\n    addToCart=(id)=>{\r\n       let tempProducts=[...this.state.products];\r\n       let index=tempProducts.findIndex(product=>product.id===id);\r\n       let product=tempProducts[index];\r\n        console.log('product: '+product);\r\n\r\n       product.inCart=true;\r\n       product.count=1;\r\n       let price=product.price;\r\n       product.total=price;\r\n\r\n       this.setState({products:tempProducts, cart:[...this.state.cart, product]});\r\n       //console.log('state: '+this.state);\r\n    };\r\n\r\n    openModal=(id)=>{\r\n        const product=this.getItem(id);\r\n        this.setState({modalProduct:product, modalOpen:true});\r\n    };\r\n    closeModal=()=>{\r\n      this.setState({modalOpen:false});\r\n    };\r\n\r\n    render() {\r\n        return (                            //It is allowed to sent the whole state like this \"...this.state\"\r\n            <ProductContext.Provider\r\n                value={{...this.state,\r\n                    handelDetail:this.handelDetail,\r\n                    addToCart:this.addToCart,\r\n                    openModal:this.openModal,\r\n                    closeModal:this.closeModal}}>\r\n\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport {ProductContext, ProductProvider};\r\n"]},"metadata":{},"sourceType":"module"}