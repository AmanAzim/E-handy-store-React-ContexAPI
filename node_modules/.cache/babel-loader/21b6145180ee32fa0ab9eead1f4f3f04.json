{"ast":null,"code":"import _objectSpread from \"D:\\\\ReactJs-Training\\\\e-commerce-project-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\ReactJs-Training\\\\e-commerce-project-react\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //The Context Provider is already set up here in advance so we can use this as central state management/props handeling system\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      //because the array is too big we kept in separate file and imported it.\n      detailProduct: _objectSpread({}, detailProduct)\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState({\n        products: tempProducts\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products;\n    };\n\n    this.handelDetail = () => {\n      console.log('Hello from detail');\n    };\n\n    this.addToCart = id => {\n      console.log(id + ' added to cart');\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return (//It is allowed to sent the whole state like this \"...this.state\"\n      React.createElement(ProductContext.Provider, {\n        value: _objectSpread({}, this.state, {\n          handelDetail: this.handelDetail,\n          addToCart: this.addToCart\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.props.children)\n    );\n  }\n\n}\n\nexport { ProductContext, ProductProvider };","map":{"version":3,"sources":["D:\\ReactJs-Training\\e-commerce-project-react\\src\\context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","handelDetail","console","log","addToCart","componentDidMount","render","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,QAA3C;AAGA,MAAMC,cAAc,GAACJ,KAAK,CAACK,aAAN,EAArB,C,CAEA;;AACA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCM,KAFoC,GAE9B;AACFC,MAAAA,QAAQ,EAAC,EADP;AACW;AACbL,MAAAA,aAAa,oBAAKA,aAAL;AAFX,KAF8B;;AAAA,SAOpCM,WAPoC,GAOxB,MAAI;AACZ,UAAIC,YAAY,GAAC,EAAjB;AAEAR,MAAAA,aAAa,CAACS,OAAd,CAAuBC,IAAD,IAAQ;AAC1B,cAAMC,UAAU,qBAAKD,IAAL,CAAhB;;AACAF,QAAAA,YAAY,GAAC,CAAC,GAAGA,YAAJ,EAAkBG,UAAlB,CAAb;AACH,OAHD;AAKA,WAAKC,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAACE;AAAV,OAAd;AACH,KAhBmC;;AAAA,SAsBpCK,OAtBoC,GAsB3BC,EAAD,IAAM;AACV,YAAMC,OAAO,GAAC,KAAKV,KAAL,CAAWC,QAAzB;AACH,KAxBmC;;AAAA,SAyBpCU,YAzBoC,GAyBvB,MAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KA3BmC;;AAAA,SA4BpCC,SA5BoC,GA4BzBL,EAAD,IAAM;AACZG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAE,GAAC,gBAAf;AACH,KA9BmC;AAAA;;AAkBpCM,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,WAAL;AACH;;AAcDc,EAAAA,MAAM,GAAG;AACL,WAAoC;AAChC,0BAAC,cAAD,CAAgB,QAAhB;AAAyB,QAAA,KAAK,oBAAM,KAAKhB,KAAX;AAAkBW,UAAAA,YAAY,EAAC,KAAKA,YAApC;AAAkDG,UAAAA,SAAS,EAAC,KAAKA;AAAjE,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKG,KAAL,CAAWC,QADhB;AADJ;AAKH;;AAxCmC;;AA2CxC,SAAQrB,cAAR,EAAwBE,eAAxB","sourcesContent":["import React, {Component} from 'react';\r\nimport {storeProducts, detailProduct} from './data';\r\n\r\n\r\nconst ProductContext=React.createContext();\r\n\r\n//The Context Provider is already set up here in advance so we can use this as central state management/props handeling system\r\nclass ProductProvider extends Component {\r\n\r\n    state={\r\n        products:[], //because the array is too big we kept in separate file and imported it.\r\n        detailProduct:{...detailProduct},\r\n    };\r\n\r\n    setProducts=()=>{\r\n        let tempProducts=[];\r\n\r\n        storeProducts.forEach((item)=>{\r\n            const singleItem={...item};\r\n            tempProducts=[...tempProducts, singleItem];\r\n        });\r\n\r\n        this.setState({products:tempProducts});\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setProducts();\r\n    }\r\n\r\n    getItem=(id)=>{\r\n        const product=this.state.products\r\n    };\r\n    handelDetail=()=>{\r\n        console.log('Hello from detail')\r\n    };\r\n    addToCart=(id)=>{\r\n        console.log(id+' added to cart');\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (                            //It is allowed to sent the whole state like this \"...this.state\"\r\n            <ProductContext.Provider value={{...this.state, handelDetail:this.handelDetail, addToCart:this.addToCart}}>\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport {ProductContext, ProductProvider};\r\n"]},"metadata":{},"sourceType":"module"}