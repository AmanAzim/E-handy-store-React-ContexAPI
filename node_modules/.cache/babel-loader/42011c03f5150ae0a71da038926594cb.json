{"ast":null,"code":"import _objectSpread from \"D:\\\\ReactJs-Training\\\\e-commerce-project-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\ReactJs-Training\\\\e-commerce-project-react\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //The Context Provider is already set up here in advance so we can use this as central state management/props handeling system\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      //because the array is too big we kept in separate file and imported it.\n      detailProduct: _objectSpread({}, detailProduct),\n      cart: []\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState({\n        products: tempProducts\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(product => {\n        return product.id === id;\n      });\n      return product;\n    };\n\n    this.handelDetail = id => {\n      this.setState({\n        detailProduct: this.getItem(id)\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      let index = tempProducts.indexOf(this.getItem(id));\n      let product = tempProducts[index];\n      console.log('index: ' + index);\n      product.inCart = true;\n      product.count = 1;\n      let price = product.price;\n      product.total = price;\n      this.setState({\n        products: tempProducts,\n        cart: [...this.cart, product]\n      });\n      console.log('state: ' + this.state);\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return (//It is allowed to sent the whole state like this \"...this.state\"\n      React.createElement(ProductContext.Provider, {\n        value: _objectSpread({}, this.state, {\n          handelDetail: this.handelDetail,\n          addToCart: this.addToCart\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.children)\n    );\n  }\n\n}\n\nexport { ProductContext, ProductProvider };","map":{"version":3,"sources":["D:\\ReactJs-Training\\e-commerce-project-react\\src\\context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handelDetail","addToCart","index","indexOf","console","log","inCart","count","price","total","componentDidMount","render","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,QAA3C;AAGA,MAAMC,cAAc,GAACJ,KAAK,CAACK,aAAN,EAArB,C,CAEA;;AACA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCM,KAFoC,GAE9B;AACFC,MAAAA,QAAQ,EAAC,EADP;AACW;AACbL,MAAAA,aAAa,oBAAKA,aAAL,CAFX;AAGFM,MAAAA,IAAI,EAAC;AAHH,KAF8B;;AAAA,SAQpCC,WARoC,GAQxB,MAAI;AACZ,UAAIC,YAAY,GAAC,EAAjB;AAEAT,MAAAA,aAAa,CAACU,OAAd,CAAuBC,IAAD,IAAQ;AAC1B,cAAMC,UAAU,qBAAKD,IAAL,CAAhB;;AACAF,QAAAA,YAAY,GAAC,CAAC,GAAGA,YAAJ,EAAkBG,UAAlB,CAAb;AACH,OAHD;AAKA,WAAKC,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAACG;AAAV,OAAd;AACH,KAjBmC;;AAAA,SAuBpCK,OAvBoC,GAuB3BC,EAAD,IAAM;AACV,YAAMC,OAAO,GAAC,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,IAApB,CAA0BD,OAAD,IAAW;AAC9C,eAAOA,OAAO,CAACD,EAAR,KAAaA,EAApB;AACH,OAFa,CAAd;AAIA,aAAOC,OAAP;AACH,KA7BmC;;AAAA,SA8BpCE,YA9BoC,GA8BtBH,EAAD,IAAM;AACf,WAAKF,QAAL,CAAc;AAACZ,QAAAA,aAAa,EAAC,KAAKa,OAAL,CAAaC,EAAb;AAAf,OAAd;AACH,KAhCmC;;AAAA,SAiCpCI,SAjCoC,GAiCzBJ,EAAD,IAAM;AACb,UAAIN,YAAY,GAAC,CAAC,GAAG,KAAKJ,KAAL,CAAWC,QAAf,CAAjB;AACA,UAAIc,KAAK,GAACX,YAAY,CAACY,OAAb,CAAqB,KAAKP,OAAL,CAAaC,EAAb,CAArB,CAAV;AACA,UAAIC,OAAO,GAACP,YAAY,CAACW,KAAD,CAAxB;AACCE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAUH,KAAtB;AAEDJ,MAAAA,OAAO,CAACQ,MAAR,GAAe,IAAf;AACAR,MAAAA,OAAO,CAACS,KAAR,GAAc,CAAd;AACA,UAAIC,KAAK,GAACV,OAAO,CAACU,KAAlB;AACAV,MAAAA,OAAO,CAACW,KAAR,GAAcD,KAAd;AAEA,WAAKb,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAACG,YAAV;AAAwBF,QAAAA,IAAI,EAAC,CAAC,GAAG,KAAKA,IAAT,EAAeS,OAAf;AAA7B,OAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAU,KAAKlB,KAA3B;AACF,KA9CmC;AAAA;;AAmBpCuB,EAAAA,iBAAiB,GAAG;AAChB,SAAKpB,WAAL;AACH;;AA6BDqB,EAAAA,MAAM,GAAG;AACL,WAAoC;AAChC,0BAAC,cAAD,CAAgB,QAAhB;AAAyB,QAAA,KAAK,oBAAM,KAAKxB,KAAX;AAAkBa,UAAAA,YAAY,EAAC,KAAKA,YAApC;AAAkDC,UAAAA,SAAS,EAAC,KAAKA;AAAjE,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKW,KAAL,CAAWC,QADhB;AADJ;AAKH;;AAxDmC;;AA2DxC,SAAQ7B,cAAR,EAAwBE,eAAxB","sourcesContent":["import React, {Component} from 'react';\r\nimport {storeProducts, detailProduct} from './data';\r\n\r\n\r\nconst ProductContext=React.createContext();\r\n\r\n//The Context Provider is already set up here in advance so we can use this as central state management/props handeling system\r\nclass ProductProvider extends Component {\r\n\r\n    state={\r\n        products:[], //because the array is too big we kept in separate file and imported it.\r\n        detailProduct:{...detailProduct},\r\n        cart:[],\r\n    };\r\n\r\n    setProducts=()=>{\r\n        let tempProducts=[];\r\n\r\n        storeProducts.forEach((item)=>{\r\n            const singleItem={...item};\r\n            tempProducts=[...tempProducts, singleItem];\r\n        });\r\n\r\n        this.setState({products:tempProducts});\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setProducts();\r\n    }\r\n\r\n    getItem=(id)=>{\r\n        const product=this.state.products.find((product)=>{\r\n            return product.id===id;\r\n        });\r\n\r\n        return product;\r\n    };\r\n    handelDetail=(id)=>{\r\n        this.setState({detailProduct:this.getItem(id)});\r\n    };\r\n    addToCart=(id)=>{\r\n       let tempProducts=[...this.state.products];\r\n       let index=tempProducts.indexOf(this.getItem(id));\r\n       let product=tempProducts[index];\r\n        console.log('index: '+index);\r\n\r\n       product.inCart=true;\r\n       product.count=1;\r\n       let price=product.price;\r\n       product.total=price;\r\n\r\n       this.setState({products:tempProducts, cart:[...this.cart, product]});\r\n       console.log('state: '+this.state);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (                            //It is allowed to sent the whole state like this \"...this.state\"\r\n            <ProductContext.Provider value={{...this.state, handelDetail:this.handelDetail, addToCart:this.addToCart}}>\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport {ProductContext, ProductProvider};\r\n"]},"metadata":{},"sourceType":"module"}